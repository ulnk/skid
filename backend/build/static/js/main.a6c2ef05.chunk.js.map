{"version":3,"sources":["contexts/socket.js","components/homepage/navbar/HomeNavbar.jsx","components/pages/homePage/HomePage.jsx","api/user/login.js","api/user/register.js","api/user/image.js","components/homepage/modals/LoginModal.jsx","actions/user.js","components/pages/homePage/Login.jsx","components/homepage/modals/RegisterModal.jsx","components/pages/homePage/Register.jsx","api/server/getAllServers.js","api/server/getServer.js","api/server/createServer.js","api/server/deleteServer.js","api/server/leaveServer.js","actions/server.js","api/channel/getAllChannels.js","api/channel/getChannel.js","api/channel/createChannel.js","components/skidapp/modals/newserver/NewServer.jsx","api/channel/deleteChannel.js","api/invite/getInviteFromServer.js","api/invite/getServerFromInvite.js","api/invite/createInvite.js","api/invite/joinInvite.js","actions/invite.js","components/skidapp/modals/joinserver/JoinServer.jsx","components/skidapp/navbar/ServerNavbar.jsx","actions/channel.js","api/category/getAllCategories.js","api/category/createCategory.js","api/category/getCategory.js","actions/other.js","api/category/deleteCategory.js","components/skidapp/modals/newcategory/NewCategory.jsx","actions/category.js","components/skidapp/modals/newchannel/NewChannel.jsx","components/skidapp/modals/newserverinvite/NewServerInvite.jsx","components/skidapp/settings/UserSettings.jsx","components/skidapp/channelbar/UserInfo.jsx","components/skidapp/channelbar/ChannelBar.jsx","api/message/getAllMessages.js","api/message/createMessage.js","api/message/getMessage.js","actions/message.js","api/message/deleteMessage.js","components/skidapp/usercontent/UserContent.jsx","actions/notifications.js","components/skidapp/reminder/Reminder.jsx","components/pages/skidApp/SkidApp.jsx","components/pages/skidApp/SkidAppMe.jsx","components/pages/skidApp/SkidAppInvite.jsx","components/App.jsx","reducers/user.js","reducers/index.js","reducers/server.js","reducers/category.js","reducers/channel.js","reducers/message.js","reducers/invite.js","reducers/notify.js","reducers/other.js","index.jsx"],"names":["SocketContext","React","createContext","useSocket","useContext","SocketProvider","children","useState","socket","setSocket","auth","useSelector","state","user","useEffect","newSocket","io","process","PROD","token","close","Provider","value","HomeNavbar","className","href","to","HomePage","messages","used","selectQuote","index","Math","floor","random","length","selectedMsg","includes","push","quotes","setQuotes","count","setCount","handleClick","e","c","document","addEventListener","removeEventListener","onClick","window","location","URI","login","username","password","axios","post","register","image","imageLink","headers","localStorage","getItem","LoginModal","props","navigating","setNavigating","navigate","useNavigate","setUsername","setPassword","dispatch","useDispatch","show","_id","onSubmit","preventDefault","a","data","type","payload","console","log","loginAction","onChange","target","placeholder","Login","RegisterModal","confPassword","setConfPassword","checkForm","setError","registerAction","error","Register","getServer","serverId","get","createServer","serverName","deleteServer","leaveServer","getAllServersAction","getServerAction","createServerAction","getAllChannels","getChannel","channelId","createChannel","categoryId","channelName","NewServer","setServerName","handleSubmit","handleKeyPress","useCallback","key","getElementById","click","join","id","getInviteFromServer","getServerFromInvite","inviteCode","createInvite","joinInvite","joinInviteAction","JoinServer","setInviteCode","splitInviteCode","split","at","replace","ServerNavbar","allServers","setAllServers","showNewServerModal","setShowNewServerModal","showJoinServerModal","setShowJoinServerModal","allServerChannelsSelector","channel","allServerChannels","allServersSelector","server","redirectToChannel","useParams","on","serverIdSocket","hideServerAction","getAllChannelsAction","getChannelAction","filter","map","i","name","getAllCategories","createCategory","categoryName","checkReminder","setter","JSON","parse","NewCategory","setCategoryName","createCategoryAction","NewChannel","setChannelName","createChannelAction","setCategoryId","NewServerInvite","timeout","slice","newInvite","setNewInvite","alreadyHasInvite","setAlreadyHasInvite","currentServerInvite","setCurrentServerInvite","copied","setCopied","allInviteCodes","invite","allInvites","hasServerInviteCode","undefined","readOnly","navigator","clipboard","writeText","clearTimeout","setTimeout","createInviteAction","UserSettings","setImage","class","size","pattern","UserInfo","showSettings","setShowSettings","muted","setMuted","src","alt","Category","showCategoryChannels","setShowCategoryChannels","allChannels","category","toUpperCase","setShowNewChannelModal","ChannelBar","showServerContextMenu","setShowServerContextMenu","showNewCategoryModal","setShowNewCategoryModal","showNewChannelModal","newChannelCategoryId","setNewChannelCategoryId","showNewInviteModal","setShowNewInviteModal","allServerCategories","setAllServerCategories","contextMenuRef","useRef","showReminder","other","reminder","currentServer","categories","getAllCategoriesAction","getInviteFromServerAction","current","contains","handleDeleteServer","emit","deleteServerAction","handleLeaveServer","leaveServerAction","ref","owner","getAllMessages","createMessage","content","createMessageAction","UserContent","createdMessage","setCreatedMessage","message","setMessage","allMessages","setAllMessages","currentChannel","allMessagesSelector","allChannelMessages","currentMessage","getAllMessagesAction","off","addMessageToAll","notifyChannelAndServer","messageServerId","messageChannel","handleCreateMessageForm","small","ownerName","Date","creation","toLocaleDateString","Reminder","setShowReminder","setItem","stringify","SkidApp","SkidAppInvite","serverFromLink","serverFromInvite","getServerFromInviteAction","Redirect","App","path","element","SkidAppMe","initialState","currentToken","jwtDecode","combineReducers","action","currentCategory","jwt","notify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.a6c2ef05.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport const useSocket = () => {\r\n    return useContext(SocketContext);\r\n}\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState();\r\n    const auth = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io(!process.env.PROD  ? 'localhost:5001' : \"https://skid.today\", {\r\n            auth: {\r\n                token: auth.token || null\r\n            }\r\n        });\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.close();\r\n    }, [auth]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './HomeNavbar.css'\r\n\r\nconst HomeNavbar = () => {\r\n    return (\r\n        <div className=\"home-navbar\">\r\n            <div className=\"left-items\">\r\n                <h1 className=\"left-title\"><span className=\"title-color-change\">skid</span> <span className='smol'>v1.3.3</span></h1>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">Features</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">GitHub</a>\r\n                <a href=\"https://github.com/ulnk/skid\" className=\"left-item\">About</a>\r\n            </div>\r\n            <div className=\"right-items\">\r\n                <Link to=\"/login\"><button className=\"login-button\">Login</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeNavbar\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport '../../homepage/homepage.css';\r\nimport '../../skidapp/skidapp.css';\r\n\r\nimport { FaGithub } from 'react-icons/fa';\r\n\r\nimport HomeNavbar from '../../homepage/navbar/HomeNavbar';\r\n\r\nconst HomePage = () => {\r\n    let messages = [\r\n        'Blasting NBA Youngboy on OBlock, been in the game since \\'02.',\r\n        'P2P Encryption.',\r\n        '14.2 Million Bots Connected.',\r\n        'Pushin\\' P.',\r\n        'Central Cee > OBlock.',\r\n        'OBlock smoking on Tooka.',\r\n        'Built using BQN.',\r\n        'You wouldn\\'t steal a car.',\r\n        'Gunna & Future - pushin P (feat. Young Thug) [Official Video]',\r\n        'I can rhyme Orange and Banana. Bornana.',\r\n        'Miria Botnet < Brixton Botnet.',\r\n        'NOTDS Multitool.',\r\n        'Killer Whales at SeaWorld™️',\r\n        'Osaka > Brush & Cyan > Horion.',\r\n        'skid  oxygen when?',\r\n        'Jesus died for chocolate eggs.',\r\n        'Visual Basic Botnet.',\r\n        'decrypt0r.cs',\r\n        'Cookie Clicker?',\r\n        'When it rains, it pours.',\r\n        'Mike Amiri, Mike Amiri.',\r\n        'Trap House Mob.',\r\n    ];\r\n\r\n    let used = [];\r\n    const selectQuote = () => {\r\n        const index = Math.floor(Math.random() * messages.length);\r\n        let selectedMsg = messages[index];\r\n        if (used.includes(messages[index])) return selectQuote();\r\n        used.push(messages[index]);\r\n        return selectedMsg;\r\n    };\r\n\r\n    const [quotes, setQuotes] = useState([selectQuote(), selectQuote()]);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const regenQuotes = () => {\r\n        setQuotes([selectQuote(), selectQuote()]);\r\n        used = [];\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setCount(c => c+=1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        return () => document.removeEventListener('click', handleClick)\r\n    }, [])\r\n\r\n    return (<>\r\n            <div className=\"home-body\">\r\n                <HomeNavbar />\r\n                <div className=\"home-header\">\r\n                    <h1 className=\"home-header-title\">{quotes[0]}</h1>\r\n                    <span className=\"home-header-desc\">{quotes[1]}</span>\r\n                    <div className=\"home-buttons-container\">\r\n                        <span onClick={() => {\r\n                            window.location = \"https://github.com/ulnk/skid\"\r\n                        }}><button className=\"home-github-main\"><FaGithub className='github-icon' />Check out our GitHub!</button></span>\r\n                        <span onClick={() => {\r\n                            window.location = \"/skid/@me\"\r\n                        }}><button className=\"home-login-main\">Open Skid in your browser</button></span>\r\n                        {count > 200 && <span onClick={() => {\r\n                            window.location = \"https://cdn.skid.rocks/WordleGame.exe\"\r\n                        }}><button onClick={regenQuotes} className=\"home-red-main\">Download Wordle</button></span>}\r\n                        {/* {count > 50 && <button onClick={regenQuotes} className=\"home-regen-main\">Regenerate Quotes!</button>} */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"home-bottom\">\r\n                {count<200 &&<button onClick={() => setCount(200)} className=\"home-regen-bottom\"></button>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const login =  (username, password) => username && password ? axios.post(URI + `/api/v1/user/login`, { username, password }) : null; ","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const register =  (username, password) => username && password ? axios.post(URI + `/api/v1/user/register`, { username, password }) : null; ","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const image = (imageLink) => imageLink ? axios.post(URI + `/api/v1/user/image`, { imageLink }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport '../../css/modal.css';\r\n\r\nimport { loginAction } from '../../../actions/user';\r\n\r\nconst LoginModal = (props) => {\r\n    const [navigating, setNavigating] = useState(true);\r\n    const auth = useSelector((state) => state.user);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginAction(username, password));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.show) setNavigating(false);\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        if (auth._id) navigate('/skid/@me')\r\n    }, [auth, navigate])\r\n\r\n    return (\r\n        <form className=\"modal-body\" onSubmit={submitForm} >\r\n            <div className={`modal-container background-primary ${!navigating ? 'show' : ''}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Welcome Back!</span>\r\n                        <small className=\"modal-header-desc\">We're so glad to see you again!</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                        <span className=\"login-register\"><Link to=\"/recover\" className=\"register-button\">Forgot your password?</Link></span>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-button-long\">Login</button>\r\n                <span className=\"login-register-below\">Need an account? <Link to=\"/register\" className=\"register-button\">Register</Link></span>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginModal","import { login } from '../api/user/login';\r\nimport { register } from '../api/user/register';\r\nimport { image } from '../api/user/image';\r\n\r\nexport const loginAction = (username, password) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await login(username, password);\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const registerAction = (username, password) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await register(username, password);\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const imageAction = (imageLink) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await image(imageLink);\r\n        dispatch({ type: 'IMAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const logoutAction = () => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'LOGOUT', payload: null });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React from 'react'\r\n\r\nimport LoginModal from '../../homepage/modals/LoginModal'\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <div className=\"body\">\r\n            <LoginModal {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate , Link } from 'react-router-dom';\r\n\r\nimport '../../css/modal.css';\r\n\r\nimport { registerAction } from '../../../actions/user';\r\n\r\nconst RegisterModal = (props) => {\r\n    const [navigating, setNavigating] = useState(true);\r\n    const auth = useSelector((state) => state.user);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confPassword, setConfPassword] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const checkForm = () => {\r\n        if (username.length < 1 || password.length < 1 || confPassword.length < 1 ) return setError('Invalid form.');\r\n        if (username.includes(' ') || username.includes('#') || username.includes('\"') || \r\n            username.includes(\"'\") || username.includes(\"&\") || username.includes(\"@\") || \r\n            username.includes(\"~\") || username.includes(\"/\") || username.includes(\",\") || \r\n            username.includes(\">\")  ) return setError(`Username must not contain special characters including: # ' \" & @ ~ / > < `);\r\n        if (password.includes(' ')) return setError('Password cannot include spaces.');\r\n        if (username.length < 5) return setError('Username must be larger than 4 characters.');\r\n        if (username.length > 15) return setError('Username must be less than 15 characters.');\r\n        if (password !== confPassword) return setError('Passwords do not match.');\r\n        dispatch(registerAction( username, password ))\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        checkForm();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.show) setNavigating(false);\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        if (auth._id) navigate('/skid/@me')\r\n    }, [auth, navigate])\r\n\r\n    const [error, setError] = useState('')\r\n\r\n\r\n    return (\r\n        <form className=\"modal-body\" onSubmit={submitForm}>\r\n            <div className={`modal-container background-primary ${!navigating ? 'show' : ''}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create an account</span>\r\n                        <small className=\"modal-err-desc\">{error}</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">USERNAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CONFIRM PASSWORD</span>\r\n                        <input type=\"password\" className=\"modal-form-input\" value={confPassword} onChange={(e) => setConfPassword(e.target.value)} placeholder=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-button-long\">Register</button>\r\n                <span className=\"login-register-below\">Already have an account? <Link to=\"/login\" className=\"register-button\">Login</Link></span>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterModal\r\n","import React from 'react'\r\n\r\nimport RegisterModal from '../../homepage/modals/RegisterModal'\r\n\r\nconst Register = (props) => {\r\n    return (\r\n        <div className=\"body\">\r\n            <RegisterModal {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllServers = () => axios.get(URI + `/api/v1/server/getAllServers`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n});","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getServer = (serverId) => serverId ? axios.get(URI + `/api/v1/server/getServer?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createServer = (serverName) => serverName ? axios.post(URI + `/api/v1/server/createServer`, { serverName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const deleteServer = (serverId) => serverId ? axios.post(URI + `/api/v1/server/deleteServer`, { serverId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const leaveServer = (serverId) => serverId ? axios.post(URI + `/api/v1/server/leaveServer`, { serverId },{\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import { getAllServers } from '../api/server/getAllServers';\r\nimport { getServer } from '../api/server/getServer';\r\nimport { createServer } from '../api/server/createServer';\r\nimport { deleteServer } from '../api/server/deleteServer';\r\nimport { leaveServer } from '../api/server/leaveServer';\r\n\r\nexport const getAllServersAction = () => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getAllServers();\r\n        dispatch({ type: 'GET_ALL_SERVERS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getServer(serverId);\r\n        dispatch({ type: 'GET_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createServerAction = (serverName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createServer(serverName);\r\n        dispatch({ type: 'CREATE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport const deleteServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        await deleteServer(serverId);\r\n        dispatch({ type: 'DELETE_SERVER', payload: serverId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const leaveServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await leaveServer(serverId);\r\n        dispatch({ type: 'LEAVE_SERVER', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const hideServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'HIDE_SERVER', payload: serverId });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllChannels = (serverId) => serverId ? axios.get(URI + `/api/v1/channel/getAllChannels?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getChannel = (channelId) => channelId ? axios.get(URI + `/api/v1/channel/getChannel?channelId=${channelId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createChannel =  (serverId, categoryId, channelName) => serverId && categoryId && channelName ? axios.post(URI + `/api/v1/channel/createChannel`, { serverId, categoryId, channelName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null; ","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { createServerAction } from '../../../../actions/server';\r\n\r\nconst NewServer = (props) => {\r\n    const [serverName, setServerName] = useState('');\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(createServerAction(serverName));\r\n        setServerName('');\r\n        props.close(false);\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-server').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-app\">\r\n                        <span className=\"modal-header-title-app\">Create server</span>\r\n                        <small className=\"modal-header-desc-app\">Give your new server a personality with a name. You can always change it later.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={serverName} onChange={(e) => setServerName(e.target.value)} placeholder={`${user.username}'s server`}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" className=\"cancel-button\" onClick={() => {props.close(false); setServerName('')}}>Cancel</button>\r\n                    <button type=\"button\" className=\"cancel-button\" onClick={() => {\r\n                        props.join(true);\r\n                        props.close(false);\r\n                        setServerName('')\r\n                    }}>Join a Server</button>\r\n                    <button type=\"submit\" id=\"submit-new-server\" className=\"submit-button\">Create server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewServer","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const deleteChannel =  (channelId) => channelId ? axios.post(URI + `/api/v1/channel/deleteChannel`, { channelId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null; ","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getInviteFromServer = (serverId) => serverId ? axios.get(URI + `/api/v1/invite/getInviteFromServer?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getServerFromInvite = (inviteCode) => inviteCode ? axios.get(URI + `/api/v1/invite/getServerFromInvite?inviteCode=${inviteCode}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createInvite = (serverId, inviteCode) => serverId ? axios.post(URI + `/api/v1/invite/createInvite`, { serverId, inviteCode }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const joinInvite = (inviteCode) => inviteCode ? axios.post(URI + `/api/v1/invite/joinInvite`, { inviteCode },{\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import { getInviteFromServer } from '../api/invite/getInviteFromServer';\r\nimport { getServerFromInvite } from '../api/invite/getServerFromInvite';\r\nimport { createInvite } from '../api/invite/createInvite';\r\nimport { joinInvite } from '../api/invite/joinInvite';\r\n\r\nexport const getInviteFromServerAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getInviteFromServer(serverId);\r\n        dispatch({ type: 'GET_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getServerFromInviteAction = (inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getServerFromInvite(inviteCode);\r\n        dispatch({ type: 'GET_SERVER_FROM_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createInviteAction = (serverId, inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createInvite(serverId, inviteCode);\r\n        dispatch({ type: 'CREATE_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const joinInviteAction = (inviteCode) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await joinInvite(inviteCode);\r\n        dispatch({ type: 'JOIN_INVITE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { joinInviteAction } from '../../../../actions/invite';\r\n\r\n\r\nconst JoinServer = (props) => {\r\n    const [inviteCode, setInviteCode] = useState('');\r\n    const [error, setError] = useState('')\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        splitInviteCode(inviteCode)\r\n        dispatch(joinInviteAction(inviteCode));\r\n        props.close(false);\r\n    }\r\n\r\n    const splitInviteCode = (inviteCode) => {\r\n        inviteCode = inviteCode.split(`:`).at(-1).split(`//`).at(-1).split(`skid.rocks/invite`).at(-1).split(`skid.today/invite`).at(-1);\r\n        inviteCode = inviteCode.split(`/`)[1] || inviteCode.split(`/`).at(-1);\r\n        inviteCode = inviteCode.replace(/\\s+/g, '') // remove whitespace\r\n        if (inviteCode === '') return setError('Invite is invalid or expired.');\r\n        setError('');\r\n        setInviteCode(inviteCode);\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-join-channel').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-app\">\r\n                        <span className=\"modal-header-title-app\">Join server</span>\r\n                        <small className=\"modal-header-desc-app\">Enter an invite below to join an existing server.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className={`modal-form-input-header ${error !== '' && 'error-invite'}`}>Invite Link {error !== '' && `- ${error}`}</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={inviteCode} onChange={(e) => setInviteCode(e.target.value)} placeholder=\"skid.today/invite/aO9yuf\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" className=\"cancel-button\" onClick={() => {props.close(false); setInviteCode('')}}>Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-join-channel\" className=\"submit-button\">Join server</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default JoinServer;","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './ServerNavbar.css';\r\n// import { getServer, removeServer, getServers } from '../../../actions/servers';\r\nimport { getServerAction, hideServerAction } from '../../../actions/server';\r\nimport { getAllChannelsAction, getChannelAction } from '../../../actions/channel';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewServer from '../modals/newserver/NewServer';\r\nimport JoinServer from '../modals/joinserver/JoinServer';\r\n\r\nconst ServerNavbar = () => {\r\n    const [allServers, setAllServers] = useState([]);\r\n    const [showNewServerModal, setShowNewServerModal] = useState(false);\r\n    const [showJoinServerModal, setShowJoinServerModal] = useState(false);\r\n    const allServerChannelsSelector = useSelector((state) => state.channel.allServerChannels);\r\n    const allServersSelector = useSelector((state) => state.server.allServers);\r\n    const redirectToChannel = useSelector((state) => state.channel.redirectToChannel);\r\n\r\n    const { serverId, channelId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n\r\n        socket.on('deleteServer', (serverIdSocket) => {\r\n            dispatch(hideServerAction(serverId));\r\n            if (serverId === serverIdSocket) navigate('/skid/@me');\r\n        })\r\n    }, [serverId, socket, dispatch, navigate]);\r\n\r\n    useEffect(() => {\r\n        setAllServers(allServersSelector);\r\n    }, [allServersSelector]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllChannelsAction(serverId));\r\n    }, [serverId, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (channelId === 'redirect' || channelId === 'null') return;\r\n        dispatch(getChannelAction(channelId));\r\n    }, [channelId, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!redirectToChannel) return;\r\n        if (!serverId) return;\r\n        const foundChanelInServer = allServerChannelsSelector.filter((c) => c.server === serverId && c._id === channelId);\r\n        if (foundChanelInServer[0]) return;\r\n        navigate(`/skid/${serverId}/${redirectToChannel}`);\r\n    }, [serverId, channelId, redirectToChannel, allServerChannelsSelector, navigate])\r\n\r\n    // useEffect(() => {\r\n    //     if (channelId === 'redirect') {\r\n    //         navigate(`/skid/${serverId}/${allServersChannelsSelector[0] ? allServersChannelsSelector[0]._id : 'redirect'}`);\r\n    //     }\r\n    // }, [serverId, channelId, allServersChannelsSelector])\r\n\r\n    // useEffect(() => {\r\n    //     if (channelId !== 'redirect') return;\r\n    //     if (!allServersChannelsSelector[0]) return;\r\n    //     navigate(`/skid/${serverId}/${allServersChannelsSelector[0]._id}`);\r\n    // }, [serverId, channelId, allServersChannelsSelector]);\r\n\r\n    return (\r\n        <>\r\n            <NewServer show={showNewServerModal} close={setShowNewServerModal} join={setShowJoinServerModal} />\r\n            <JoinServer show={showJoinServerModal} close={setShowJoinServerModal} />\r\n            \r\n            <div className=\"navbar background-tertiary\">\r\n                <Link to=\"/skid/@me\">\r\n                    <div className={`selected-noti ${!serverId ? 'active' : null}`}></div>\r\n                    <div className={`navbar-server hover-skid background-primary ${!serverId ? 'home-selected' : null}`}>\r\n                        <span className=\"tool\">Home</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                { allServers[0] && <div className=\"divider background-primary\" /> }\r\n\r\n                {\r\n                    allServers.map((server, i) => {\r\n                        if (!server) return null;\r\n                        return (\r\n                            <Link key={i} to={`/skid/${server._id}/redirect`}>\r\n                                <div className={`selected-noti ${server._id === serverId ? 'active' : null}`}></div>\r\n                                <div className={`navbar-server hover-server background-primary ${server._id === serverId ? 'server-selected' : null}`} onClick={() => {\r\n                                    dispatch(getServerAction(server._id));\r\n                                }}>\r\n                                    <span className=\"tool\">{server.name}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <div className=\"divider background-primary\" />\r\n\r\n                <div className=\"navbar-server hover-server background-primary\" onClick={() => setShowNewServerModal(true)}>\r\n                    <span className=\"tool\">Add a server</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServerNavbar\r\n","import { getAllChannels } from '../api/channel/getAllChannels';\r\nimport { getChannel } from '../api/channel/getChannel';\r\nimport { createChannel } from '../api/channel/createChannel';\r\nimport { deleteChannel } from '../api/channel/deleteChannel';\r\n\r\nexport const getAllChannelsAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        if (!serverId) return;\r\n        const { data } = await getAllChannels(serverId);\r\n        dispatch({ type: 'GET_ALL_CHANNELS', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getChannelAction = (channelId) => async (dispatch) =>  {\r\n    try {\r\n        if (!channelId) return;\r\n        const { data } = await getChannel(channelId);\r\n        dispatch({ type: 'GET_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createChannelAction = (serverId, categoryId, channelName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createChannel(serverId, categoryId, channelName);\r\n        dispatch({ type: 'CREATE_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteChannelAction = (channelId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await deleteChannel(channelId);\r\n        dispatch({ type: 'CREATE_CHANNEL', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllCategories = (serverId) => serverId ? axios.get(URI + `/api/v1/category/getAllCategories?serverId=${serverId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createCategory = (serverId, categoryName) => serverId && categoryName ? axios.post(URI + `/api/v1/category/createCategory`, { serverId, categoryName }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null; ","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getCategory = (categoryId) => categoryId ? axios.get(URI + `/api/v1/category/getCategory?categoryId=${categoryId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","export const checkReminder = (setter) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'REMINDER', payload: setter ? setter : JSON.parse(localStorage.getItem('reminder'))});\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const test = () => async (dispatch) =>  {\r\n    dispatch({ type: 'TEST', payload: '123'});\r\n}","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const deleteCategory =  (categoryId) => categoryId ? axios.post(URI + `/api/v1/category/deleteCategory`, { categoryId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null; ","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n// import { addCategory } from '../../../../actions/servers'\r\nimport { createCategoryAction } from '../../../../actions/category'\r\n\r\nimport './NewCategory.css'\r\n\r\nconst NewCategory = (props) => {\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const { serverId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createCategoryAction(serverId, categoryName))\r\n        setCategoryName('')\r\n        props.close(false)\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-category').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create category</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CATEGORY NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={categoryName} onChange={(e) => setCategoryName(e.target.value)} placeholder=\"New category\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-category\" className=\"submit-button\">Create category</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewCategory\r\n","import { getAllCategories } from \"../api/category/getAllCategories\";\r\nimport { getCategory } from \"../api/category/getCategory\";\r\nimport { createCategory } from \"../api/category/createCategory\";\r\nimport { deleteCategory } from \"../api/category/deleteCategory\";\r\n\r\nexport const getAllCategoriesAction = (serverId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getAllCategories(serverId);\r\n        dispatch({ type: 'GET_ALL_CATEGORIES', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getCategoryAction = (categoryId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getCategory(categoryId);\r\n        dispatch({ type: 'GET_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createCategoryAction = (serverId, categoryName) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createCategory(serverId, categoryName);\r\n        dispatch({ type: 'CREATE_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteCategoryAction = (categoryId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await deleteCategory(categoryId);\r\n        dispatch({ type: 'DELETE_CATEGORY', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { createChannelAction } from '../../../../actions/channel'\r\n\r\nimport { FaHashtag } from 'react-icons/fa'\r\nimport { ImVolumeMedium } from 'react-icons/im'\r\n\r\nimport './NewChannel.css'\r\n\r\nconst NewChannel = (props) => {\r\n    const [channelName, setChannelName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const { serverId } = useParams();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createChannelAction(serverId, props.categoryId, channelName));\r\n        setChannelName('');\r\n        props.setCategoryId('');\r\n        props.close(false);\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n        if (e.key === \"Enter\") document.getElementById('submit-new-channel').click();\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create text channel</span>\r\n                        <small className=\"modal-header-desc\">in {props.categoryId}</small>\r\n                    </div>\r\n                    <div className=\"modal-select-container\">\r\n                        <span className=\"modal-select-header\">CHANNEL TYPE</span>\r\n                        <div className=\"modal-type-container\">\r\n                            <div className=\"modal-select-type modal-selected-type\">\r\n                                <div className=\"select-check-wrapper\"><div className=\"select-check\"/></div>\r\n                                <FaHashtag className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Text Channel</span>\r\n                                    <small className=\"select-type-desc\">Post images, GIFs, opinions and puns</small>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-select-type modal-select-hover\">\r\n                                <div className=\"unselect-check-wrapper\"><div className=\"unselect-check\"/></div>\r\n                                <ImVolumeMedium className=\"select-type-icon\" />\r\n                                <div className=\"select-type-info\">\r\n                                    <span className=\"select-type-name\">Voice Channel</span>\r\n                                    <small className=\"select-type-desc\">Hang out with voice, video and screen sharing</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">CHANNEL NAME</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={channelName} onChange={(e) => {setChannelName(e.target.value)}} placeholder=\"new-channel\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" onClick={() => {props.setCategoryId('');props.close(false)}} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-channel\" className=\"submit-button\">Create channel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewChannel\r\n","import React, { useState, useEffect,useCallback } from 'react'\r\nimport './NewServerInvite.css';\r\n\r\n// import { createInvite, hasInvite } from '../../../../actions/servers';\r\nimport { createInviteAction } from '../../../../actions/invite';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst NewServerInvite = (props) => {\r\n    const { serverId } = useParams();\r\n    const [newInvite, setNewInvite] = useState(serverId.slice(-6, -1));\r\n    const [alreadyHasInvite, setAlreadyHasInvite] = useState(false);\r\n    const [currentServerInvite, setCurrentServerInvite] = useState('');\r\n    const [copied, setCopied] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const allInviteCodes = useSelector(state => state.invite.allInvites);\r\n    let timeout;\r\n\r\n\r\n    useEffect(() => {\r\n        let hasServerInviteCode = allInviteCodes.filter(inviteCode => inviteCode.server === serverId)\r\n        setAlreadyHasInvite(hasServerInviteCode[0] !== undefined);\r\n        if (hasServerInviteCode[0]) setCurrentServerInvite(hasServerInviteCode[0].invite)\r\n    }, [serverId, allInviteCodes]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createInviteAction(serverId, newInvite));\r\n    }\r\n\r\n    const handleKeyPress = useCallback( (e) => {\r\n        if (e.key === \"Escape\") props.close(false)\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress, false);\r\n        return () => document.removeEventListener('keydown', handleKeyPress, false);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        !alreadyHasInvite ? <form className={`modal-underbody ${props.show && 'show'}`} onSubmit={handleSubmit}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header\">\r\n                        <span className=\"modal-header-title\">Create Server Invite</span>\r\n                        <small className=\"modal-header-desc\">Give your server personality with a custom invite.</small>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container\">\r\n                        <span className=\"modal-form-input-header\">SERVER INVITE</span>\r\n                        <input type=\"text\" className=\"modal-form-input\" value={newInvite} onChange={(e) => setNewInvite(e.target.value)} placeholder=\"fun-server\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"options-container background-secondary\">\r\n                    <button type=\"button\" onClick={() => props.close(false)} className=\"cancel-button\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submit-new-category\" className=\"submit-button\">Create Server Invite</button>\r\n                </div>\r\n            </div>\r\n        </form> : <div className={`modal-underbody ${props.show && 'show'}`}>\r\n            <div className={`modal-container-app background-primary ${props.show && 'show'}`}>\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-invite\">\r\n                        <span className=\"modal-header-title-invite\">Invite friends to the server!</span>\r\n                    </div>\r\n                    <div className=\"modal-form-input-container-invite\">\r\n                        <span className=\"modal-form-input-header\">SERVER INVITE</span>\r\n                        <div className=\"modal-form-input-readonly-container\">\r\n                            <input type=\"text\" className=\"modal-form-input-readonly\" value={currentServerInvite} readOnly />\r\n                            <button type=\"button\" className={`modal-form-button-readonly-copy ${copied && 'green'}`} onClick={() => {\r\n                                setCopied(true);\r\n                                navigator.clipboard.writeText(`https://skid.today/invite/${currentServerInvite}`);\r\n                                clearTimeout(timeout);\r\n                                timeout = setTimeout(() => {\r\n                                    setCopied(false);\r\n                                }, 1000)\r\n                            }}>{copied ? 'Copied' : 'Copy'}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewServerInvite","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport './UserSettings.css';\r\nimport { imageAction, logoutAction } from '../../../actions/user';\r\n\r\nconst UserSettings = (props) => {\r\n    const [image, setImage] = useState('');\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        setImage(user.image)\r\n    }, [user]);\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault();\r\n        dispatch(imageAction(image));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`settings ${props.class}`}>\r\n                <div className=\"close\" onClick={() => props.close(false)}>\r\n                    <MdClose size=\"18\" />\r\n                </div>\r\n                <section className='tabs'>\r\n                    <ul className='tab-buttons-container'>\r\n                        <div className=\"tab-section\">\r\n                            <span className=\"font-display section-title\">USER SETTINGS</span>\r\n                            <div className=\"section-items\">\r\n                                <button className=\"section-button text-channel-colour selected\" >My Account</button>\r\n                                <button className=\"section-button text-channel-colour\" >User Profile</button>\r\n                                <button className=\"section-button text-channel-colour\" >Privacy & Safety</button>\r\n                                <button className=\"section-button text-channel-colour\" >Authorised Apps</button>\r\n                                <button className=\"section-button text-channel-colour\" >Connections</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divider-options\" />\r\n                        <form className=\"tab-section\" onSubmit={() => { dispatch(logoutAction()) }}>\r\n                            <button type=\"submit\" className=\"section-button logout text-channel-colour\" >Logout</button>\r\n                        </form>\r\n                    </ul>\r\n                </section>\r\n                <section className='options'>\r\n                    <div className=\"header-title-option\">My Account</div>\r\n                    <form className=\"option\" onSubmit={handleImageChange}>\r\n                        <span className=\"option-title\">Profile Picture URL</span>\r\n                        <input type=\"url\" className=\"modal-form-input-o\" pattern=\"https://.*\" value={image || 'https://cdn.skid.rocks/img/1f0bfc0865d324c2587920a7d80c609b.png'} onChange={(e) => setImage(e.target.value)} placeholder=\"\" />\r\n                        <button type='submit' className='submit-button-save'>Save</button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserSettings;\r\n","import React, { useState } from 'react';\r\nimport { MdMic, MdMicOff } from 'react-icons/md';\r\nimport { HiCog } from 'react-icons/hi';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UserOptions from '../settings/UserSettings';\r\n\r\nconst UserInfo = (props) => {\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [muted, setMuted] = useState(false);\r\n    const user = useSelector(state => state.user);\r\n    return (\r\n        <>\r\n            <UserOptions close={setShowSettings} class={`${showSettings && 'active'}`} />\r\n            <section className={`user-info background-secondary-alt ${props.className}`}>\r\n                <div className=\"profile-container\">\r\n                    <img className=\"profile-image\" src={user.image || 'https://cdn.skid.rocks/img/1f0bfc0865d324c2587920a7d80c609b.png'} alt=\"\" />    \r\n                    <div className=\"profile-name-container\">\r\n                        <span className=\"profile-name\">{user.username}</span>\r\n                        <small className=\"profile-tag\">{user._id}</small>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button-wrapper\" onClick={() => setMuted(!muted)}>\r\n                        <span className=\"button-tool\">{!muted ? 'Mute' : 'Unmute'}</span>\r\n                        {!muted ? <MdMic className=\"button\" /> : <MdMicOff className=\"button\" />}\r\n                    </div>\r\n                    <div className=\"button-wrapper\" onClick={() => setShowSettings(true)}>\r\n                        <span className=\"button-tool\">Settings</span>\r\n                        <HiCog className=\"button\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { FaChevronDown, FaPlus, FaHashtag, FaChevronRight } from 'react-icons/fa';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './ChannelBar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getServerAction, deleteServerAction, leaveServerAction } from '../../../actions/server';\r\nimport { getAllCategoriesAction } from '../../../actions/category';\r\nimport { getInviteFromServerAction } from '../../../actions/invite';\r\nimport { checkReminder } from '../../../actions/other';\r\n\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport NewCategory from '../../skidapp/modals/newcategory/NewCategory';\r\nimport NewChannel from '../../skidapp/modals/newchannel/NewChannel';\r\nimport NewServerInvite from '../modals/newserverinvite/NewServerInvite';\r\n\r\nimport UserInfo from './UserInfo';\r\n\r\nconst ChannelBar = () => {\r\n    const [showServerContextMenu, setShowServerContextMenu] = useState(false);\r\n    const [showNewCategoryModal, setShowNewCategoryModal] = useState(false);\r\n    const [showNewChannelModal, setShowNewChannelModal] = useState(false);\r\n    const [newChannelCategoryId, setNewChannelCategoryId] = useState('');\r\n    const [showNewInviteModal, setShowNewInviteModal] = useState(false);\r\n    const [allServerCategories, setAllServerCategories] = useState([]);\r\n    const contextMenuRef = useRef();\r\n    \r\n    const showReminder = useSelector(state => state.other.reminder)\r\n    const server = useSelector(state => state.server.currentServer);\r\n    const categories = useSelector(state => state.category.allServerCategories);\r\n    const auth = useSelector(state => state.user);\r\n\r\n    const { serverId, channelId } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        dispatch(checkReminder());\r\n        dispatch(getServerAction(serverId));\r\n        dispatch(getAllCategoriesAction(serverId));\r\n        dispatch(getInviteFromServerAction(serverId));\r\n    }, [dispatch, serverId, channelId]);\r\n\r\n    useEffect(() => {\r\n        setAllServerCategories(categories);\r\n    }, [categories]);\r\n    \r\n    const handleClick = useCallback((e) => {\r\n        if (!showServerContextMenu) return;\r\n        if (contextMenuRef.current && !contextMenuRef.current.contains(e.target)) return setShowServerContextMenu(false);\r\n    }, [showServerContextMenu]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        return () => document.removeEventListener('click', handleClick)\r\n    }, [showServerContextMenu, handleClick])\r\n\r\n    const handleDeleteServer = () => {\r\n        socket.emit('deleteServer', serverId);\r\n        dispatch(deleteServerAction(serverId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    const handleLeaveServer = () => {\r\n        dispatch(leaveServerAction(serverId));\r\n        navigate('/skid/@me');\r\n    }\r\n\r\n    return (\r\n        server._id ?\r\n            <>\r\n                <NewServerInvite show={showNewInviteModal} close={setShowNewInviteModal} />\r\n                <NewCategory show={showNewCategoryModal} close={setShowNewCategoryModal} />\r\n                <NewChannel categoryId={newChannelCategoryId} setCategoryId={setNewChannelCategoryId} show={showNewChannelModal} close={setShowNewChannelModal} />\r\n                <UserInfo />\r\n                <nav className={`channel-bar background-secondary noselect ${showReminder && 'rHeight'}`}>\r\n                    <div className=\"channel-bar-items\" >\r\n                        <section className=\"server-name\" onClick={() => setShowServerContextMenu(!showServerContextMenu)}>\r\n                            <h2 className=\"server-name-header font-primary\">{server.name}</h2>\r\n                            <FaChevronDown className=\"server-name-chevron\" />\r\n                            <ul ref={contextMenuRef} className={`context-menu ${showServerContextMenu && 'on'}`}>\r\n                                {serverId !== '625c7d70df1a464bb9d6d059' ? <>\r\n                                    <li className=\"context-menu-item blue text-blue\" onClick={() => setShowNewInviteModal(true)}>\r\n                                        <button>Invite People</button>\r\n                                    </li>\r\n                                    <li className=\"context-menu-item blue\" onClick={() => setShowNewCategoryModal(true)}>\r\n                                        <button>Create Category</button>\r\n                                    </li>\r\n                                    {auth._id !== server.owner && <li className=\"context-menu-item red\" onClick={() => handleLeaveServer()}>\r\n                                        <button>Leave Server</button>\r\n                                    </li>}\r\n                                    {auth._id === server.owner && <li className=\"context-menu-item red\" onClick={() => handleDeleteServer()}>\r\n                                        <button>Delete Server</button>\r\n                                    </li>}\r\n                                </>: null}\r\n                            </ul>\r\n                        </section>\r\n                        <div className=\"channels\">\r\n                            {\r\n                                allServerCategories.map((category, i) => {\r\n                                    return (\r\n                                        <Category key={i} category={category} setCategoryId={setNewChannelCategoryId} setShowNewChannelModal={setShowNewChannelModal} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </> : \r\n            <nav className={`channel-bar background-secondary noselect ${showReminder && 'rHeight'}`}>\r\n                <div className=\"channel-bar-items\" >\r\n                    <section className=\"server-name\">\r\n                    </section>\r\n                    <div className=\"channels\">\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n    );\r\n};\r\n\r\n\r\nconst Category = (props) => {\r\n    const [showCategoryChannels, setShowCategoryChannels] = useState(true);\r\n    const { serverId, channelId } = useParams();\r\n    const allChannels = useSelector(state => state.channel.allServerChannels);\r\n\r\n    return (\r\n        <div className=\"category\">\r\n            <div className=\"category-header text-channel-colour-group\">\r\n                {showCategoryChannels ? <FaChevronDown className={`category-chevron colour-group-item`} onClick={() => setShowCategoryChannels(!showCategoryChannels)} /> :\r\n                    <FaChevronRight className=\"category-chevron colour-group-item\" onClick={() => setShowCategoryChannels(!showCategoryChannels)} />}\r\n                <span className=\"category-header-text font-display colour-group-item\" onClick={() => setShowCategoryChannels(!showCategoryChannels)} >{props.category.name.toUpperCase()}</span>\r\n                <FaPlus className=\"category-add colour-group-item\" onClick={() => {props.setShowNewChannelModal(true); props.setCategoryId(props.category._id)}} />\r\n            </div>\r\n            <div className=\"children\">\r\n                {\r\n                    allChannels.filter((c) => c.category === props.category._id).map((channel, i) => {\r\n                        return (showCategoryChannels &&\r\n                            <Link to={`/skid/${serverId}/${channel._id}`} key={i}>\r\n                                <div className={`channel text-channel-colour ${channelId === channel._id ? 'selected' : '' }`}>\r\n                                    <FaHashtag className=\"channel-hashtag text-channel-colour\" />\r\n                                    <span className=\"channel-title font-primary\">{channel.name}</span>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ChannelBar\r\n","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getAllMessages = (serverId, channelId) => serverId && channelId ? axios.get(URI + `/api/v1/message/getAllMessages?serverId=${serverId}&channelId=${channelId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const createMessage = (content, serverId, categoryId, channelId) => content && serverId && categoryId && channelId ? axios.post(URI + `/api/v1/message/createMessage`, { content, serverId, categoryId, channelId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : 'awd'; ","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const getMessage = (messageId) => messageId ? axios.get(URI + `/api/v1/message/getMessage?messageId=${messageId}`, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null;","import { getAllMessages } from \"../api/message/getAllMessages\";\r\nimport { getMessage } from \"../api/message/getMessage\";\r\nimport { createMessage } from \"../api/message/createMessage\";\r\nimport { deleteMessage } from \"../api/message/deleteMessage\";\r\n\r\nexport const getAllMessagesAction = (serverId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getAllMessages(serverId, channelId);\r\n        dispatch({ type: 'GET_ALL_MESSAGES', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getMessageAction = (messageId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await getMessage(messageId);\r\n        dispatch({ type: 'GET_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addMessageToAll = (message) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'ADD_MESSAGE_TO_ALL', payload: message });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const createMessageAction = (content, serverId, categoryId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await createMessage(content, serverId, categoryId, channelId);\r\n        dispatch({ type: 'CREATE_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const deleteMessageAction = (messageId) => async (dispatch) =>  {\r\n    try {\r\n        const { data } = await deleteMessage(messageId);\r\n        dispatch({ type: 'DELETE_MESSAGE', payload: data });\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst URI = process.env.PROD ? 'https://skid.today' : 'http://localhost:5001';\r\n\r\nexport const deleteMessage = (messageId) => messageId ? axios.post(URI + `/api/v1/message/deleteMessage`, { messageId }, {\r\n    headers: {\r\n        'x-auth-token': localStorage.getItem(\"token\"),\r\n    }\r\n}) : null; ","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../../contexts/socket';\r\n\r\nimport { addMessageToAll, createMessageAction, getAllMessagesAction } from '../../../actions/message';\r\nimport { notifyChannelAndServer } from '../../../actions/notifications';\r\n\r\nimport './UserContent.css';\r\n\r\nconst UserContent = () => {\r\n    const [createdMessage, setCreatedMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [allMessages, setAllMessages] = useState([]);\r\n\r\n    const user = useSelector(state => state.user);\r\n    const channel = useSelector(state => state.channel.currentChannel);\r\n    const allMessagesSelector = useSelector(state => state.message.allChannelMessages);\r\n    const showReminder = useSelector(state => state.other.reminder)\r\n    const currentMessage = useSelector(state => state.message.currentMessage)\r\n    \r\n    const { serverId, channelId } = useParams();\r\n    const socket = useSocket();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (channelId === 'redirect') return;\r\n        dispatch(getAllMessagesAction(serverId, channelId));\r\n    }, [dispatch, serverId, channelId]);\r\n\r\n    useEffect(() => {\r\n        setAllMessages(allMessagesSelector);\r\n    }, [allMessagesSelector, setAllMessages]);\r\n\r\n    useEffect(() => {\r\n        if (!socket && !createdMessage.owner) return;\r\n        socket.emit('message', createdMessage);\r\n    }, [socket, createdMessage]);\r\n\r\n    useEffect(() => {\r\n        setCreatedMessage(currentMessage);\r\n    }, [currentMessage]);\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        socket.off('message');\r\n\r\n        socket.on('message', (message) => {\r\n            if (message.owner === user._id) return;\r\n            if (message.server === serverId && message.channel === channelId) dispatch(addMessageToAll(message));\r\n            else dispatch(notifyChannelAndServer(message.messageServerId, message.messageChannel));\r\n        })\r\n    }, [socket, user, serverId, channelId, dispatch]);\r\n\r\n    const handleCreateMessageForm = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(createMessageAction(message, serverId, channel.category, channelId));\r\n        setMessage('');\r\n    }\r\n\r\n    return (\r\n        channel._id === channelId ? <div className={`user-content background-primary ${showReminder && 'reminder-user-content'}`}>\r\n            <div className=\"channel-name background-primary\">\r\n                <span className=\"channel-info-name\">{channel.name}</span>\r\n            </div>\r\n            <div className=\"chat\">\r\n                <div className=\"chat-bar-container\">\r\n                    <form className=\"chat-bar background-primary-alt\" onSubmit={handleCreateMessageForm}>\r\n                        <input type=\"text\" placeholder={`Message #${channel.name}`} value={message} onChange={(e) => setMessage(e.target.value)} className=\"chat-bar-area\" />\r\n                    </form>\r\n                </div>   \r\n                <div className=\"chat-container\">\r\n                    { \r\n                        allMessages.map((message, i) => {\r\n                            return (\r\n                                message.small ? <div className=\"chat-item-small\" key={message._id}>\r\n                                    <div className=\"chat-item-content\">\r\n                                        <span className=\"chat-item-text\">{message.content}</span>\r\n                                    </div>\r\n                                </div> :\r\n                                <div className=\"chat-item\" key={i}>\r\n                                    <img className=\"chat-item-picture\" src={message.image} alt=\"\" />\r\n                                    <div className=\"chat-item-content\">\r\n                                        <div className=\"chat-user-info\">\r\n                                            <span className=\"chat-item-name\">{message.ownerName}</span>\r\n                                            <span className=\"chat-item-date\">{new Date(message.creation).toLocaleDateString()}</span>\r\n                                        </div>\r\n                                        <span className=\"chat-item-text\">{message.content}</span>\r\n                                    </div>\r\n                                </div> \r\n                            )\r\n                        })\r\n                    }\r\n                    <div className=\"chat-container-header\">\r\n                        <span className='chat-contiainer-header-text-large'>Welcome to #{channel.name}!</span>\r\n                        <small className=\"chat-contiainer-header-text-small\">This is the start of the #{channel.name} channel.</small>\r\n                    </div>\r\n                </div>             \r\n            </div>\r\n            <div className=\"member-list background-secondary\">\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">ONLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-primary\">genericuser</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"member-list-category\">\r\n                    <span className=\"member-list-name text-channel-colour\">OFFLINE</span>\r\n                    <div className=\"members\">\r\n                        <div className=\"member\">\r\n                            <div className=\"member-profile-image\" />\r\n                            <span className=\"member-name text-muted\">Taylor Peters</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> : <div className={`user-content background-primary ${showReminder && 'reminder-user-content'}`}>\r\n            <div className=\"channel-name background-primary\" />\r\n            <div className=\"chat\">\r\n                <div className=\"chat-bar-container\">\r\n                    <form className=\"chat-bar background-primary-alt\" onSubmit={(e) => e.preventDefault()} />\r\n                </div>   \r\n            </div>\r\n            <div className=\"member-list background-secondary\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContent\r\n","export const notifyChannelAndServer = (serverId, channelId) => async (dispatch) =>  {\r\n    try {\r\n        dispatch({ type: 'NOTIFY_SERVER_CHANNEL', payload: { serverId, channelId } });\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { checkReminder } from '../../../actions/other';\r\n\r\nimport './Reminder.css';\r\n\r\nconst Reminder = () => {\r\n    const [showReminder, setShowReminder] = useState(JSON.parse(localStorage.getItem('reminder')));\r\n    const dispatch = useDispatch();\r\n\r\n    const hideReminder = () => {\r\n        setShowReminder(false);\r\n        localStorage.setItem('reminder', JSON.stringify(false));\r\n        dispatch(checkReminder(false));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('reminder') === null) {\r\n            localStorage.setItem('reminder', true);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {showReminder && <div className=\"reminder\">\r\n                <div className=\"reminder-title\">\r\n                    Have you heard of notds? Check out their amazing mutitool! \r\n                    <a href=\"https://github.com/jugoslovenska/notds\" className=\"reminder-button\">click here!</a>\r\n                </div>\r\n                <MdClose className='reminder-close' onClick={() => hideReminder()}/>\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reminder;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\n\r\nimport { getAllServersAction } from '../../../actions/server';\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport ChannelBar from '../../skidapp/channelbar/ChannelBar';\r\nimport UserContent from '../../skidapp/usercontent/UserContent';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\n\r\n// Modals\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.user);\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth._id) navigate('/login');\r\n        dispatch(getAllServersAction());\r\n    }, [auth, navigate, dispatch]);\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />\r\n                <div className=\"flex h-full w-full transition-none user-context-navbar-container\">\r\n                    <ChannelBar />\r\n                    <UserContent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport '../../skidapp/skidapp.css';\r\nimport { getAllServersAction } from '../../../actions/server';\r\n\r\n// Main Components\r\nimport ServerNavbar from '../../skidapp/navbar/ServerNavbar';\r\nimport UserInfo from '../../skidapp/channelbar/UserInfo';\r\nimport Reminder from '../../skidapp/reminder/Reminder';\r\nconst SkidApp = () => {\r\n    const auth = useSelector((state) => state.user);\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!auth._id) navigate('/login');\r\n        dispatch(getAllServersAction());\r\n    }, [auth, navigate, dispatch]);\r\n\r\n    return (\r\n        <div className=\"flex h-screen w-screen overflow-hidden\">\r\n            <ServerNavbar />\r\n            <UserInfo className=\"ml-[72px]\" />\r\n            <div className=\"reminder-container\">\r\n                <Reminder />    \r\n                <div className=\"flex transition-none user-context-navbar-container\">\r\n                    <nav className=\"channel-bar background-secondary\"/>\r\n                    <div className=\"user-content background-primary flex flex-grow\"></div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkidApp\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport '../../skidapp/skidapp.css'\r\nimport './SkidAppInvite.css'\r\n\r\nimport { joinInviteAction, getServerFromInviteAction } from '../../../actions/invite';\r\n\r\n// import NewChannel from '../../skidapp/modals/newchannel/NewChannel'\r\n// import NewCategory from '../../skidapp/modals/newcategory/NewCategory'\r\n// import NewServer from '../../skidapp/modals/newserver/NewServer'\r\n\r\nconst SkidAppInvite = () => {\r\n    const auth = useSelector((state) => state.user);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { inviteCode } = useParams();\r\n\r\n    const serverFromLink = useSelector((state) => state.invite.serverFromInvite);\r\n\r\n    useEffect(() => {\r\n        dispatch(getServerFromInviteAction(inviteCode))\r\n    }, [dispatch, inviteCode])\r\n\r\n    const onClick = () => {\r\n        if (!auth._id) return navigate('/login');\r\n        dispatch(joinInviteAction(inviteCode));\r\n        navigate(`/skid/${serverFromLink._id}/redirect`);\r\n    }\r\n\r\n    const redirect = () => {\r\n        if (!auth._id) return navigate('/login');\r\n        navigate(`/skid/@me`);\r\n    }\r\n\r\n    return (\r\n        serverFromLink._id ? <div className=\"invite-body\">\r\n            <div className=\"modal-container-inv background-primary\">\r\n                <div className=\"modal-form-inv\">\r\n                    <div className=\"modal-form-header-inv\">\r\n                        <small className=\"modal-header-desc-inv\">You have been invited to join</small>\r\n                        <span className=\"modal-header-title-inv\">{serverFromLink.name}!</span>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" onClick={onClick} className=\"submit-button-inv\">Accept Invite</button>\r\n            </div>\r\n        </div> : <div className=\"invite-body\">\r\n            <div className=\"modal-container-inv2 show background-primary\">\r\n                <div className=\"modal-form\">\r\n                    <div className=\"modal-form-header-inv2\">\r\n                        <span className=\"modal-header-title-inv2\">Invite Invalid</span>\r\n                        <small className=\"modal-header-desc-inv2\">This invite may be expired or you might not have permission to join.</small>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" onClick={redirect} className=\"submit-button-inv\">Continue to Site</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkidAppInvite\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/socket';\r\n\r\nimport './css/modal.css';\r\n\r\n// HomePage Route Elements\r\nimport HomePage from './pages/homePage/HomePage';\r\nimport Login from './pages/homePage/Login';\r\nimport Register from './pages/homePage/Register';\r\n\r\n// SkidApp Elements\r\nimport SkidApp from './pages/skidApp/SkidApp';\r\nimport SkidAppMe from './pages/skidApp/SkidAppMe';\r\nimport SkidAppInvite from './pages/skidApp/SkidAppInvite';\r\n\r\nconst App = () => {\r\n    const user = useSelector(state => state.user);\r\n    const socket = useSocket();\r\n\r\n    useEffect(() => {\r\n        if (!socket) return;\r\n        if (user.token) socket.emit('online', { ...user });\r\n    }, [socket, user]);\r\n\r\n    return (\r\n        <>  \r\n            <Routes>\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"/login\" element={<Login show={true} />} />\r\n                <Route path=\"/register\" element={<Register show={true} />} />\r\n\r\n                <Route path=\"/invite/:inviteCode\" element={<SkidAppInvite />} />\r\n                \r\n                <Route path=\"/skid/:serverId/:channelId\" element={<SkidApp />} />\r\n                <Route path=\"/skid/@me\" element={<SkidAppMe />} />\r\n\r\n                <Route path=\"*\" element={<Redirect />} />\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Redirect = () => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        navigate('/skid/@me');\r\n    }, [navigate])\r\n    return null;\r\n}\r\n\r\nexport default App\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nconst initialState = (token) => {\r\n    const currentToken = token || JSON.parse(localStorage.getItem('token'));\r\n\r\n    try {\r\n        return {\r\n            token: currentToken, \r\n            ...jwtDecode(currentToken).data\r\n        }\r\n    } catch {\r\n        return {\r\n            token: JSON.stringify(null)\r\n        }\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            if (!action.payload) return { ...initialState() };\r\n            localStorage.setItem('token', JSON.stringify(action.payload.jwt));\r\n            return { ...initialState(action.payload.jwt) };\r\n        case 'LOGOUT':\r\n            localStorage.setItem('token', JSON.stringify(null))\r\n            return { ...initialState() };\r\n        case 'REGISTER':\r\n            if (!action.payload) return { ...initialState() };\r\n            localStorage.setItem('token', JSON.stringify(action.payload.jwt));\r\n            return { ...initialState(action.payload.jwt) };\r\n        case 'IMAGE':\r\n            if (!action.payload) return state;\r\n            return { ...initialState(action.payload.jwt) };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport server from './server.js';\r\nimport category from './category.js';\r\nimport channel from './channel.js';\r\nimport message from './message.js';\r\n\r\nimport invite from './invite.js';\r\nimport user from './user.js';\r\nimport notify from './notify.js';\r\nimport other from './other.js';\r\n\r\nexport default combineReducers({\r\n    server, category, channel, message, invite, user, notify, other\r\n});","const initialState = () => {\r\n    return {\r\n        currentServer : {},\r\n        allServers: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'JOIN_INVITE':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentServer: action.payload, allServers: [...state.allServers, action.payload] };\r\n        case 'GET_ALL_SERVERS':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: [...action.payload] };\r\n        case 'CREATE_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: [...state.allServers, action.payload] };\r\n        case 'GET_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentServer: action.payload };\r\n        case 'DELETE_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: state.allServers.filter((server => server._id !== action.payload)) };\r\n        case 'LEAVE_SERVER':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServers: state.allServers.filter((server => server._id !== action.payload)) };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        currentCategory : {},\r\n        allServerCategories: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_CATEGORIES':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerCategories: action.payload };\r\n        case 'GET_CATEGORY':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentCategory: action.payload };\r\n        case 'CREATE_CATEGORY':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerCategories: [...state.allServerCategories, action.payload] };\r\n        case 'DELETE_CATEGORY':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerCategories: [...action.payload] };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        currentChannel: {},\r\n        redirectToChannel: null,\r\n        allServerChannels: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_CHANNELS':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerChannels: [...action.payload], redirectToChannel: action.payload[0]._id };\r\n        case 'CREATE_CHANNEL':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerChannels: [...state.allServerChannels, action.payload] };\r\n        case 'GET_CHANNEL':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentChannel: action.payload };\r\n        case 'DELETE_CHANNEL':\r\n            if (!action.payload) return state;\r\n            return { ...state, allServerChannels: [...action.payload] };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        currentMessage: {},\r\n        allChannelMessages: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_MESSAGES':\r\n            if (!action.payload) return state;\r\n            return { ...state, allChannelMessages: [...action.payload] };\r\n        case 'ADD_MESSAGE_TO_ALL':\r\n            if (!action.payload) return state;\r\n            return { ...state, allChannelMessages: [action.payload, ...state.allChannelMessages] };\r\n        case 'GET_MESSAGE':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentMessage: action.payload };\r\n        case 'CREATE_MESSAGE':\r\n            if (!action.payload) return state;\r\n            return { ...state, currentMessage: action.payload, allChannelMessages: [action.payload, ...state.allChannelMessages]};\r\n        case 'DELETE_MESSAGE':\r\n            if (!action.payload) return state;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        serverFromInvite: {},\r\n        allInvites: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'GET_SERVER_FROM_INVITE':\r\n            if (!action.payload) return { ...state, serverFromInvite: {} };\r\n            return { ...state, serverFromInvite: action.payload };\r\n        case 'GET_INVITE':\r\n            if (!action.payload) return state;\r\n            for (let invite of state.allInvites) if (invite._id === action.payload._id) return state;\r\n            return { ...state, allInvites: [action.payload, ...state.allInvites] };\r\n        case 'CREATE_INVITE':\r\n            if (!action.payload) return state;\r\n            return { ...state, allInvites: [action.payload, ...state.allInvites] };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        notify: []\r\n    }\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'NOTIFY_SERVER_CHANNEL':\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = () => {\r\n    return {\r\n        reminder : {}\r\n    };\r\n}\r\n\r\n//eslint-disable-next-line\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case 'REMINDER':\r\n            return { ...state, reminder: action.payload };\r\n        case 'TEST':\r\n            console.log(action.payload)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nimport reducers from './reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { SocketProvider } from './contexts/socket';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <SocketProvider>\r\n        <App />\r\n      </SocketProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}